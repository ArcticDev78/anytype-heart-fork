syntax = "proto3";
package anytype;
option go_package = "core";

import "google/protobuf/struct.proto";

message Block {
    string id = 1;
    BlockType type = 2;
    google.protobuf.Struct fields = 3;
    BlockChildren children = 4;

    oneof content {
        BlockContentDashboard dashboard = 11;
        BlockContentPage page = 12;
        BlockContentDataview dataview = 13;

        BlockContentText text = 14;
        BlockContentMedia media = 15;
        BlockContentLayout layout = 16;
    }
}

// row/column type specified in the header
message BlockContentLayout {
    Style style = 1;

    enum Style {
        ROW = 0;
        COLUMN = 1;
    }
}

enum BlockType {
    DASHBOARD = 0;
    PAGE = 1;
    DATAVIEW = 2;

    TEXT = 101;
    FILE = 102;
    PICTURE = 103;
    VIDEO = 104;
    BOOKMARK = 105;

    LAYOUT = 201;
}

message BlockChildren {
    repeated string children = 2;
}

message BlocksList {
    map<string, Block> blockById = 1; // blocks map by block Id
}

message BlockContentPage {
    enum Style {
        EMPTY = 0;
        TASK = 1;
        BOOKMARK = 2;
        SET = 3;
        // ...
    }

    Style style = 1;
    BlockChildren children = 2;
    BlocksList blocks = 3;
}

message BlockContentDashboard {
    enum Style {
        HOME = 0;
        ARCHIVE = 1;
        // ...
    }

    Style style = 1;
    BlocksList blocks = 4;
}

message BlockContentDataview {
    // ...
}

message BlockContentText {
    enum Style {
        p = 0;
        h1 = 1;
        h2 = 2;
        h3 = 3;
        h4 = 4;
        quote = 5;
    }

    enum MarkerType {
        none = 0;
        number = 1;
        bullet = 2;
    }

    message Marks {
        repeated Mark marks = 1;
    }

    message Mark {

        enum Type {
            STRIKETHROUGH = 0;
            KEYBOARD = 1;
            ITALIC = 2;
            BOLD = 3;
            LINK = 4;
        }

        Range range = 1;
        Type type = 2;
        string param = 3; // link, color, etc
    }

    string text = 1;
    Style style = 2;
    Marks marksList = 3;

    bool toggleable = 4;
    MarkerType markerType = 5;

    bool checkable = 6;
    bool checked = 7;
}

message BlockContentMedia {
    string link = 1;
}

message Range {
    int32 from = 1;
    int32 to = 2;
}
