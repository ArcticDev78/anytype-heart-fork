syntax="proto3";
package anytype;
option go_package = "pb";

import "file.proto";

message Avatar {
    oneof avatar {
        Image image = 1;
        string color = 2;
    }
}

message Account {
    string id = 1;
    string name = 2;
    Avatar avatar = 3;
}

message WalletCreateRequest {
    string rootPath = 1;
}

message WalletCreateResponse {
    Error error = 1;
    string mnemonic = 2;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;

            FAILED_TO_CREATE_LOCAL_REPO = 101;
            // ...
        }
    }
}

message WalletRecoverRequest {
    string rootPath = 1;
    string mnemonic = 2;
}

message WalletRecoverResponse {
    Error error = 1;
    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;

            FAILED_TO_CREATE_LOCAL_REPO = 101;
        }
    }
}

message AccountCreateRequest {
    string name = 1;
    oneof avatar {
        string avatarLocalPath = 2;
        string avatarColor = 3;
    }
}

message AccountCreateResponse {
    Error error = 1;
    Account account = 2;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;

            ACCOUNT_CREATED_BUT_FAILED_TO_START_NODE = 101;
            ACCOUNT_CREATED_BUT_FAILED_TO_SET_NAME = 102;
            ACCOUNT_CREATED_BUT_FAILED_TO_SET_AVATAR = 103;
        }
    }
}

// Start accounts search for recovered mnemonic
message AccountRecoverRequest {}

// Found accounts will come in event AccountAdd
message AccountRecoverResponse {
    Error error = 1;
    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...
            NO_ACCOUNTS_FOUND = 101;
            NEED_TO_RECOVER_WALLET_FIRST = 102;
            FAILED_TO_CREATE_LOCAL_REPO = 103;
            LOCAL_REPO_EXISTS_BUT_CORRUPTED = 104;
            FAILED_TO_RUN_NODE = 105;
        }
    }
}

message AccountSelectRequest {
    string id = 1;
    // optional, set if this is the first request
    string rootPath = 2;
}

message AccountSelectResponse {
    Error error = 1;
    Account account = 2;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...

            FAILED_TO_CREATE_LOCAL_REPO = 101;
            LOCAL_REPO_EXISTS_BUT_CORRUPTED = 102;
            FAILED_TO_RUN_NODE = 103;
            FAILED_TO_FIND_ACCOUNT_INFO = 104;
            LOCAL_REPO_NOT_EXISTS_AND_MNEMONIC_NOT_SET = 105;

        }
    }
}

message AccountStartRequest {
    string id = 1;
}

message AccountStartResponse {
    Error error = 1;
    Account account = 2;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...

            LOCAL_REPO_DOESNT_EXIST = 101;
            LOCAL_REPO_EXISTS_BUT_CORRUPTED = 102;
            FAILED_TO_RUN_NODE = 103;
            FAILED_TO_FIND_ACCOUNT_INFO = 104;
        }
    }
}

message AccountShow {
    int64  index  = 1;
    Account account = 2;
}
