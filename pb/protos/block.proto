syntax="proto3";
package anytype;
option go_package = "pb";

// commands
//
message BlockOpenRequest {
    string id = 1;
}

message BlockOpenResponse {
    Error error = 1;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...
        }
    }
}

message BlockCreateRequest {
    BlockType type = 1;
}

message BlockCreateResponse {
    Error error = 1;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...
        }
    }
}

message BlockUpdateRequest {
    BlockChanges changes = 1;
}

message BlockUpdateResponse {
    Error error = 1;

    message Error {
        Code code = 1;
        string description = 2;

        enum Code {
            NULL = 0;
            UNKNOWN_ERROR = 1;
            BAD_INPUT = 2;
            // ...
        }
    }
}

// events
//

// call
message BlockShow {
    Block block = 1;
}

message BlockUpdate {
    BlockChanges changes = 1;
}

message BlockCreate {
    Block block = 1;
}

message BlockTextChange {
    oneof change {
        string text = 1;
        BlockText.Style style = 2;
        BlockText.Marks marks = 3;

        bool toggleable = 4;
        BlockText.MarkerType markerType = 5;

        bool checkable = 6;
        bool checked = 7;
    }
}

message BlockPageChange {
    oneof change {
        BlockPage.Style style = 1;
        BlockConnectionsList structure = 2;
        BlocksList blocks = 3;
    }
}

message BlockHeaderChange {
    oneof change {
        string id = 1;
        BlockType type = 2;
        string name = 3;
        string icon = 4;

        BlockPermissions permissions = 5;
    }
}

message BlockDashboardChange {
    oneof change {
        BlockDashboard.Style style = 1;
        BlockConnectionsList structure = 2;
        BlockHeadersList headers = 3;
    }
}

message BlockAtomicChange {
    string id = 1;
    oneof change {
        BlockTextChange text = 2;
        BlockHeaderChange blockHeader = 3;
        BlockPageChange page = 4;
        BlockDashboardChange dashboard = 5;
    }
}

message BlockChanges {
    repeated BlockAtomicChange changes = 1;
}

// models
//

message Block {
    BlockHeader header = 1;

    oneof content {
        BlockDashboard dashboard = 11;
        BlockPage page = 12;
        BlockDataview dataview = 13;

        BlockText text = 14;
        BlockMedia media = 15;
    }
}

message BlockHeader {
    string id = 1;
    BlockType type = 2;
    string name = 3;
    string icon = 4;

    BlockPermissions permissions = 5;
}

message BlockPermissions {
    bool read = 1;
    bool edit = 2;
    bool remove = 3;
    bool drag = 4;
    bool dropOn = 5;
}

enum BlockType {
    DASHBOARD = 0;
    PAGE = 1;
    DATAVIEW = 2;

    TEXT = 3;
    FILE = 4;
    PICTURE = 5;
    VIDEO = 6;
}

message BlockConnections {
    string id = 1;
    string next = 2;
    string columnBottom = 3;
    string rowRight = 4;
    string inner = 5;
}

message BlockConnectionsList {
    repeated BlockConnections structure = 1;
}

message BlockHeadersList {
    repeated BlockHeader headers = 1;
}

message BlocksList {
    repeated Block blocks = 1;
}

message BlockPage {
    enum Style {
        EMPTY = 0;
        TASK = 1;
        BOOKMARK = 2;
        SET = 3;
        // ...
    }

    Style style = 1;
    BlockConnectionsList structure = 2;
    BlocksList blocks = 3;
}

message BlockDashboard {
    enum Style {
        MAIN_SCREEN = 0;
        // ...
    }

    Style style = 1;
    BlockConnectionsList structure = 2;
    BlockHeadersList headers = 3;
}

message BlockDataview {
    // ...
}

message BlockText {
    enum Style {
        p = 0;
        h1 = 1;
        h2 = 2;
        h3 = 3;
        h4 = 4;
        quote = 5;
    }

    enum MarkerType {
        none = 0;
        number = 1;
        bullet = 2;
    }

    message Marks {
        repeated Mark marks = 1;
    }

    message Mark {
        message Range {
            int32 from = 1;
            int32 to = 2;
        }

        enum Type {
            S = 0;
            KBD = 1;
            I = 2;
            B = 3;
            A = 4;
        }

        Range range = 1;
        Type type = 2;
    }

    string text = 1;
    Style style = 2;
    Marks marksList = 3;

    bool toggleable = 4;
    MarkerType markerType = 5;

    bool checkable = 6;
    bool checked = 7;
}

message BlockMedia {
    string link = 1;
    BlockMediaMeta meta = 2;
}

message BlockMediaMeta {
    string name = 1;
    string dateAdded = 2;
    int32 size = 3;
    string description = 4;
}



