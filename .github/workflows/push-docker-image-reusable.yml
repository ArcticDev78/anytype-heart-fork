on:
  workflow_call:
    inputs:
      release:
        description: name of release to push on docker registry
        type: string
        required: true
        default: v0.0.1

name: push-docker-image

jobs:
  push-docker-image:
    name: Build Docker image and push to registry
    runs-on: ubuntu-22.04
    steps:
      - name: debug
        run: |
          echo inputs.release = ${{ inputs.release }}

      - name: Set env ARTIFACT_PREFIX
        run: |
          echo ARTIFACT_PREFIX=js_${{ inputs.release }}_linux >> $GITHUB_ENV

      - name: Download release asset amd64
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ inputs.release }}
          file: ${{ env.ARTIFACT_PREFIX }}-amd64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download release asset arm64
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ inputs.release }}
          file: ${{ env.ARTIFACT_PREFIX }}-arm64.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unpack archive amd64
        run: |
          tar -zxf ${{ env.ARTIFACT_PREFIX }}-amd64.tar.gz
          rm -f ${{ env.ARTIFACT_PREFIX }}-amd64.tar.gz
          mv grpc-server grpc-server-amd64

      - name: Unpack archive arm64
        run: |
          tar -zxf ${{ env.ARTIFACT_PREFIX }}-arm64.tar.gz
          rm -f ${{ env.ARTIFACT_PREFIX }}-arm64.tar.gz
          mv grpc-server grpc-server-arm64

      - name: Generate Dockerfile
        run: |
          cat <<EOF > Dockerfile
          # syntax=docker/dockerfile:1
          FROM alpine
          ARG TARGETARCH
          COPY grpc-server-\$TARGETARCH grpc-server
          COPY protobuf protobuf
          EXPOSE 31007
          EXPOSE 31008
          ENV ANYTYPE_GRPC_ADDR=:31007
          ENV ANYTYPE_GRPCWEB_ADDR=:31008
          CMD ["./grpc-server"]
          EOF

      - name: Debug
        run: pwd; cat Dockerfile;  ls -R

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ inputs.release }}
