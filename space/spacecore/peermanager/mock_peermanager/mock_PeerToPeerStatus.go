// Code generated by mockery. DO NOT EDIT.

package mock_peermanager

import mock "github.com/stretchr/testify/mock"

// MockPeerToPeerStatus is an autogenerated mock type for the PeerToPeerStatus type
type MockPeerToPeerStatus struct {
	mock.Mock
}

type MockPeerToPeerStatus_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPeerToPeerStatus) EXPECT() *MockPeerToPeerStatus_Expecter {
	return &MockPeerToPeerStatus_Expecter{mock: &_m.Mock}
}

// CheckPeerStatus provides a mock function with given fields:
func (_m *MockPeerToPeerStatus) CheckPeerStatus() {
	_m.Called()
}

// MockPeerToPeerStatus_CheckPeerStatus_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckPeerStatus'
type MockPeerToPeerStatus_CheckPeerStatus_Call struct {
	*mock.Call
}

// CheckPeerStatus is a helper method to define mock.On call
func (_e *MockPeerToPeerStatus_Expecter) CheckPeerStatus() *MockPeerToPeerStatus_CheckPeerStatus_Call {
	return &MockPeerToPeerStatus_CheckPeerStatus_Call{Call: _e.mock.On("CheckPeerStatus")}
}

func (_c *MockPeerToPeerStatus_CheckPeerStatus_Call) Run(run func()) *MockPeerToPeerStatus_CheckPeerStatus_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockPeerToPeerStatus_CheckPeerStatus_Call) Return() *MockPeerToPeerStatus_CheckPeerStatus_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPeerToPeerStatus_CheckPeerStatus_Call) RunAndReturn(run func()) *MockPeerToPeerStatus_CheckPeerStatus_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPeerToPeerStatus creates a new instance of MockPeerToPeerStatus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPeerToPeerStatus(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPeerToPeerStatus {
	mock := &MockPeerToPeerStatus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
